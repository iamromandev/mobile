apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.1'

    defaultConfig {
        applicationId 'com.dreampany.cast'
        minSdkVersion 18
        targetSdkVersion 29
        versionCode 1
        versionName '0.0.1'

        multiDexEnabled true

        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    signingConfigs {
        debug {
            storeFile file('../keystore/debug.keystore.jks')
            keyAlias 'debug.keystore'
            storePassword 'debug.keystore'
            keyPassword 'debug.keystore'
        }

        release {
            storeFile file('../keystore/dreampany.keystore.jks')
            keyAlias 'dreampany'
            storePassword 'ROOT.net080208ROOT.net080208'
            keyPassword 'ROOT.net080208ROOT.net080208'
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            useProguard false
            shrinkResources false
            crunchPngs false
            ext.enableCrashlytics = false
            ext.alwaysUpdateBuildId = false
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled true
            useProguard true
            shrinkResources true
            crunchPngs false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            proguardFiles 'proguard-rules-crashlytics.pro'
            proguardFiles 'proguard-rules-webview.pro'
            proguardFiles 'proguard-rules-data-model.pro'
            proguardFiles 'proguard-rules-jni.pro'
            proguardFiles 'proguard-rules-firebase.pro'
            proguardFiles 'proguard-rules-play-service.pro'
            proguardFiles 'proguard-rules-data-binding.pro'
            proguardFiles 'proguard-rules-joda-time.pro'
            proguardFiles 'proguard-rules-joda-time-android.pro'
            proguardFiles 'proguard-rules-eventbus.pro'
            proguardFiles 'proguard-rules-about.pro'
            proguardFiles 'proguard-rules-support.pro'
            proguardFiles 'proguard-rules-guava.pro'
            proguardFiles 'proguard-rules-fresco.pro'
            proguardFiles 'proguard-rules-flexible-adapter.pro'
            proguardFiles 'proguard-rules-condom.pro'
            proguardFiles 'proguard-rules-retrofit.pro'
            proguardFiles 'proguard-rules-okhttp.pro'
            proguardFiles 'proguard-rules-okio.pro'
            proguardFiles 'proguard-rules-dagger.pro'
            proguardFiles 'proguard-rules-reactive-network.pro'
            proguardFiles 'proguard-rules-jackson.pro'
            proguardFiles 'proguard-rules-butterknife.pro'
            proguardFiles 'proguard-rules-kotlin.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    dataBinding {
        enabled = true
    }
	
	compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/library_release.kotlin_module'
        exclude 'META-INF/metadata.jvm.kotlin_module'
        exclude 'META-INF/metadata.kotlin_module'
    }

    applicationVariants.all { variant ->
        def appName = variant.applicationId
        variant.outputs.all {
            outputFileName = appName + "-${variant.versionName}-${variant.buildType.name}.apk"
        }
    }
}

androidExtensions {
    experimental = true
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    /* test */
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.3.0-alpha02'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0-alpha02'

    /* library */
    implementation project(':frame')

    /* android arch */
    kapt 'androidx.lifecycle:lifecycle-compiler:2.2.0-alpha02'
    kapt 'androidx.room:room-compiler:2.1.0'

    /* dagger */
    kapt 'com.google.dagger:dagger-compiler:2.22.1'
    kapt 'com.google.dagger:dagger-android-processor:2.22.1'

    /* crashlytics */
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'
}

apply plugin: 'com.google.gms.google-services'