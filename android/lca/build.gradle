apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
//apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.firebase.firebase-perf'

android {
    compileSdkVersion 29
    buildToolsVersion '30.0.0 rc3'

    defaultConfig {
        applicationId 'com.dreampany.lca'
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 147
        versionName '1.4.7'

        multiDexEnabled = true
        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    signingConfigs {
        debug {
            storeFile file('../keystore/debug.keystore.jks')
            keyAlias 'debug.keystore'
            storePassword 'debug.keystore'
            keyPassword 'debug.keystore'
        }

        release {
            storeFile file('../keystore/dreampany.keystore.jks')
            keyAlias 'dreampany'
            storePassword 'ROOT.net080208ROOT.net080208'
            keyPassword 'ROOT.net080208ROOT.net080208'
        }
    }

    buildTypes {
        debug {
            crunchPngs false
            minifyEnabled false
            shrinkResources false
            ext.enableCrashlytics = false
            ext.alwaysUpdateBuildId = false
            jniDebuggable = true
            renderscriptDebuggable = true
            signingConfig signingConfigs.debug
        }

        release {
            minifyEnabled true
            shrinkResources true

            signingConfig signingConfigs.release

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            proguardFiles 'proguard-rules-crashlytics.pro'
            proguardFiles 'proguard-rules-webview.pro'
            proguardFiles 'proguard-rules-jni.pro'
            proguardFiles 'proguard-rules-firebase.pro'
            proguardFiles 'proguard-rules-play-service.pro'
            proguardFiles 'proguard-rules-data-binding.pro'
            proguardFiles 'proguard-rules-joda-time.pro'
            proguardFiles 'proguard-rules-joda-time-android.pro'
            proguardFiles 'proguard-rules-eventbus.pro'
            proguardFiles 'proguard-rules-about.pro'
            proguardFiles 'proguard-rules-support.pro'
            proguardFiles 'proguard-rules-guava.pro'
            proguardFiles 'proguard-rules-fresco.pro'
            proguardFiles 'proguard-rules-flexible-adapter.pro'
            proguardFiles 'proguard-rules-condom.pro'
            proguardFiles 'proguard-rules-retrofit.pro'
            proguardFiles 'proguard-rules-okhttp.pro'
            proguardFiles 'proguard-rules-okio.pro'
            proguardFiles 'proguard-rules-dagger.pro'
            proguardFiles 'proguard-rules-reactive-network.pro'
            proguardFiles 'proguard-rules-jackson.pro'
            proguardFiles 'proguard-rules-butterknife.pro'
            proguardFiles 'proguard-rules-kotlin.pro'
        }
    }

    sourceSets {main.java.srcDirs += 'src/main/kotlin'}

    dataBinding {enabled = true}

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dexOptions {
        //jumboMode = true
        //preDexLibraries true
        //maxProcessCount 8
        // Instead of setting the heap size for the DEX process, increase Gradle's
        // heap size to enable dex-in-process. To learn more, read the next section.
        // javaMaxHeapSize "2048m"
    }

/*    aaptOptions {
        cruncherEnabled false
    }*/

    lintOptions {
        //checkReleaseBuilds true
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        //abortOnError true
        //warning 'MissingTranslation','GetLocales','VectorDrawableCompat'
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/library_release.kotlin_module'
        exclude 'META-INF/metadata.jvm.kotlin_module'
        exclude 'META-INF/metadata.kotlin_module'
    }

/*    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/library_release.kotlin_module'
        exclude 'META-INF/services/com.fasterxml.jackson.core.ObjectCodec'
        exclude 'META-INF/services/com.fasterxml.jackson.core.JsonFactory'
    }*/

    applicationVariants.all { variant ->
        def appName = variant.applicationId
        variant.outputs.all {
            outputFileName = appName + "-${variant.versionName}-${variant.buildType.name}.apk"
        }
    }
}

androidExtensions {experimental = true}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    /* test */
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    /* library */
    implementation project(':framework')

    /* androidx lifecycle */
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"

    /* androidx room */
    kapt "androidx.room:room-compiler:$room_version"

    /* dagger */
    kapt "com.google.dagger:dagger-compiler:$dagger"
    kapt "com.google.dagger:dagger-android-processor:$dagger"

    /* firebase */
    implementation 'com.google.firebase:firebase-core:17.4.3'
    implementation 'com.google.firebase:firebase-analytics:17.4.3'
    implementation 'com.google.firebase:firebase-crashlytics:17.1.0'
    //implementation 'com.google.firebase:firebase-crashlytics-ndk:17.0.0'
    implementation 'com.google.firebase:firebase-perf:19.0.7'
    implementation 'com.google.firebase:firebase-appindexing:19.1.0'
    implementation 'com.google.firebase:firebase-ads:19.2.0'
    implementation 'com.google.firebase:firebase-database:19.3.1'
    implementation 'com.google.firebase:firebase-firestore:21.4.3'
    implementation 'com.google.firebase:firebase-messaging:20.2.1'

    /* facebook */
    implementation 'com.facebook.fresco:fresco:2.1.0'

    /* misc */
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    implementation 'com.libRG:customtextview:2.2'
    implementation 'com.github.midorikocak:currency-picker-android:1.2.1'
    implementation 'com.beardedhen:androidbootstrap:2.3.2'
}